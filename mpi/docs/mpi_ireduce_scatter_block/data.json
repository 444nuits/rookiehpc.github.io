{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Ireduce_scatter_block",
    "DirectoryName":"mpi_ireduce_scatter_block",
    "SharedDescription":true,

    "Description":"MPI_Ireduce_scatter_block is the means by which MPI processes can apply a reduction followed by a scatter, which may trigger extra optimisations compared to manually issuing an MPI_Reduce followed by an MPI_Scatter. Unlike its blocking counterpart MPI_Reduce_scatter_block, MPI_Ireduce_scatter_block will not block until the operation completed. In other words, when MPI_Ireduce_scatter_block returns, the buffers passed may not have been exchanged yet, and it must be considered unsafe to reuse the buffers passed. The user must therefore check for completion with MPI_Wait or MPI_Test before safely reusing the buffer passed. Also, unlike MPI_Ireduce_scatter, MPI_Ireduce_scatter_block restricts all blocks to be of the same length. MPI_Ireduce_scatter_block is a collective operation; it must be called by every MPI process in the communicator given. Predefined operations are: MPI_MIN, MPI_MAX, MPI_BOR, MPI_BXOR, MPI_LOR, MPI_LXOR, MPI_BAND, MPI_LAND, MPI_SUM and MPI_PROD. Other variants of MPI_Ireduce_scatter_block are MPI_Reduce_scatter, MPI_Reduce_scatter_block, MPI_Ireduce_scatter. Refer to MPI_Reduce_scatter_block to see the blocking counterpart of MPI_Ireduce_scatter_block.",
    "Categories":[
        "Collectives",
        "Non-blocking",
        "Reduction"
    ],

    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"send_buffer",
                    "Description":"A pointer on the buffer to send for reduction.",
                    "Type":"const void*",
                    "Optional":false
                },
                {
                    "Name":"receive_buffer",
                    "Description":"A pointer on the buffer in which store the result of the reduction.",
                    "Type":"void*",
                    "Optional":false
                },
                {
                    "Name":"count",
                    "Description":"The number of elements in the send buffer, which is identical to that in the receive buffer as well.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"datatype",
                    "Description":"The type of a buffer element.",
                    "Type":"MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"operation",
                    "Description":"The operation to apply to combine messages received in the reduction. This operation must be associative, and commutative for predefined operations while user-defined operations may be non-commutative.",
                    "Type":"MPI_Op",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the reduction takes place.",
                    "Type":"MPI_Comm",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"MPI_Request*",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the reduction.\n- MPI_SUCCESS: The routine successfully completed."
                }
        },
        {
            "Language":"FORTRAN-2008",
            "Parameters": [
                {
                    "Name":"send_buffer",
                    "Description":"The buffer to send for reduction.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"receive_buffer",
                    "Description":"The buffer in which store the result of the reduction.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"INOUT"
                },
                {
                    "Name":"count",
                    "Description":"The number of elements in the send buffer, which is identical to that in the receive buffer as well.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"datatype",
                    "Description":"The type of a buffer element.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"operation",
                    "Description":"The operation to apply to combine messages received in the reduction. This operation must be associative, and commutative for predefined operations while user-defined operations may be non-commutative.",
                    "Type":"TYPE(MPI_Op)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the reduction takes place.",
                    "Type":"TYPE(MPI_Comm)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"TYPE(MPI_Request)",
                    "Optional":false,
                    "Intent":"OUT"
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the reduction.",
                    "Type":"INTEGER",
                    "Optional":true,
                    "Intent":"OUT"
                }
            ]
        },
        {
            "Language":"FORTRAN-90",
            "Parameters": [
                {
                    "Name":"send_buffer",
                    "Description":"The buffer to send for reduction.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"receive_buffer",
                    "Description":"The buffer in which store the result of the reduction.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"count",
                    "Description":"The number of elements in the send buffer, which is identical to that in the receive buffer as well.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"datatype",
                    "Description":"The type of a buffer element.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"operation",
                    "Description":"The operation to apply to combine messages received in the reduction. This operation must be associative, and commutative for predefined operations while user-defined operations may be non-commutative.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the reduction takes place.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the reduction.",
                    "Type":"INTEGER",
                    "Optional":false
                }
            ]
        }
    ]
}