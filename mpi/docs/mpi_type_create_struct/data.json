{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Type_create_struct",
    "DirectoryName":"mpi_type_create_struct",
    "SharedDescription":true,
    "Description":"MPI_Type_create_struct is the most flexible routine to create an MPI datatype. It builds the MPI_Datatype as a sequence of blocks: each block being made by replicating an existing MPI_Datatype a certain number of times. The flexibility is that, for each block, the number of replicates to use, the MPI datatype to replicate and the displacement to apply is specified separately. Other ways to create a datatype are MPI_Type_contiguous, MPI_Type_vector, MPI_Type_create_hvector, MPI_Type_indexed, MPI_Type_create_hindexed, MPI_Type_create_indexed_block, MPI_Type_create_hindexed_block, MPI_Type_create_subarray, MPI_Type_create_darray.",
    "Categories":[
        "User datatypes"
    ],
    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"block_count",
                    "Description":"The number of blocks to create.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"block_lengths",
                    "Description":"Array containing the length of each block.",
                    "Type":"const int\t[]",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"Array containing the displacement for each block, expressed in bytes. The displacement is the distance between the start of the MPI datatype created and the start of the block. It is different from the stride used in MPI_Type_vector for instance, where it expresses the distance between the start of a block to the next.",
                    "Type":"const MPI_Aint\t[]",
                    "Optional":false
                },
                {
                    "Name":"block_types",
                    "Description":"Array containing the MPI datatypes to replicate to make each block.",
                    "Type":"MPI_Datatype\t[]",
                    "Optional":false
                },
                {
                    "Name":"new_datatype",
                    "Description":"The variable in which store the datatype created.",
                    "Type":"MPI_Datatype*",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the MPI structure datatype creation.\n- MPI_SUCCESS: the routine successfully completed."
                }
        },
        {
            "Language":"FORTRAN-2008",
            "Parameters": [
                {
                    "Name":"block_count",
                    "Description":"The number of blocks to create.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"block_lengths",
                    "Description":"Array containing the length of each block.",
                    "Type":"INTEGER\t(block_count)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"displacements",
                    "Description":"Array containing the displacement for each block, expressed in bytes. The displacement is the distance between the start of the MPI datatype created and the start of the block. It is different from the stride used in MPI_Type_vector for instance, where it expresses the distance between the start of a block to the next.",
                    "Type":"INTEGER(KIND=MPI_ADDRESS_KIND)\t(block_count)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"block_types",
                    "Description":"Array containing the MPI datatypes to replicate to make each block.",
                    "Type":"TYPE(MPI_Datatype)\t(block_count)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"new_datatype",
                    "Description":"The variable in which store the datatype created.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"OUT"
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the MPI structure datatype creation.",
                    "Type":"INTEGER",
                    "Optional":true,
                    "Intent":"OUT"
                }
            ]
        },
        {
            "Language":"FORTRAN-90",
            "Parameters": [
                {
                    "Name":"block_count",
                    "Description":"The number of blocks to create.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"block_lengths",
                    "Description":"Array containing the length of each block.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"Array containing the displacement for each block, expressed in bytes. The displacement is the distance between the start of the MPI datatype created and the start of the block. It is different from the stride used in MPI_Type_vector for instance, where it expresses the distance between the start of a block to the next.",
                    "Type":"INTEGER(KIND=MPI_ADDRESS_KIND)\t(*)",
                    "Optional":false
                },
                {
                    "Name":"block_types",
                    "Description":"Array containing the MPI datatypes to replicate to make each block.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"new_datatype",
                    "Description":"The variable in which store the datatype created.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the MPI structure datatype creation.",
                    "Type":"INTEGER",
                    "Optional":false
                }
            ]
        }
    ]
}