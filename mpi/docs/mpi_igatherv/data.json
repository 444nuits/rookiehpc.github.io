{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Igatherv",
    "DirectoryName":"mpi_igatherv",
    "SharedDescription":true,

    "Description":"MPI_Igatherv is the non-blocking version of MPI_Gatherv; it collects data from all processes in a given communicator and concatenates them in the given buffer on the specified process. It also allows the messages received to have different lengths and be stored at arbitrary locations in the root process buffer. Unlike MPI_Gatherv however, MPI_Igatherv will not wait for the collection to complete and will return immediately instead. The user must therefore check for completion with MPI_Wait or MPI_Test before the buffers passed can be safely reused. MPI_Igatherv is a collective operation; all processes in the communicator must invoke this routine. Other variants of MPI_Igatherv are MPI_Igather, MPI_Iallgather and MPI_Iallgatherv. Refer to MPI_Gatherv to see the blocking counterpart of MPI_Igatherv.",
    "Categories":[
        "Collectives",
        "Non-blocking"
    ],

    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to send. The “in place” option for intra-communicators is specified by passing MPI_IN_PLACE as the value of buffer_send at the root. In such a case, count_send and datatype_send are ignored, and the contribution of the root to the gathered vector is assumed to be already in the correct place in the receive buffer.",
                    "Type":"const void*",
                    "Optional":false
                },
                {
                    "Name":"count_send",
                    "Description":"The number of elements in the send buffer.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element.",
                    "Type":"MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the gathered data for the root process. For other processes, the receiving parameters like this one are ignored.",
                    "Type":"void*",
                    "Optional":false
                },
                {
                    "Name":"counts_recv",
                    "Description":"An array containing the number of elements in the message to receive from each process, not the total number of elements to receive from all processes altogether. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"const int*",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message received by each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"const int*",
                    "Optional":false
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will collect the data gathered.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the gather takes place.",
                    "Type":"MPI_Comm",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"MPI_Request*",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the non-blocking variable gathering.\n- MPI_SUCCESS: The routine successfully completed."
                }
        },
        {
            "Language":"FORTRAN-2008",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to send. The “in place” option for intra-communicators is specified by passing MPI_IN_PLACE as the value of buffer_send at the root. In such a case, count_send and datatype_send are ignored, and the contribution of the root to the gathered vector is assumed to be already in the correct place in the receive buffer.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"count_send",
                    "Description":"The number of elements in the send buffer.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the gathered data for the root process. For other processes, the receiving parameters like this one are ignored.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"INOUT"
                },
                {
                    "Name":"counts_recv",
                    "Description":"An array containing the number of elements in the message to receive from each process, not the total number of elements to receive from all processes altogether. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"INTEGER, ASYNCHRONOUS\t(*)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message received by each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"INTEGER, ASYNCHRONOUS\t(*)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will collect the data gathered.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the gather takes place.",
                    "Type":"TYPE(MPI_Comm)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"TYPE(MPI_Request)",
                    "Optional":false,
                    "Intent":"OUT"
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the non-blocking variable gathering.",
                    "Type":"INTEGER",
                    "Optional":true,
                    "Intent":"OUT"
                }
            ]
        },
        {
            "Language":"FORTRAN-90",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to send. The “in place” option for intra-communicators is specified by passing MPI_IN_PLACE as the value of buffer_send at the root. In such a case, count_send and datatype_send are ignored, and the contribution of the root to the gathered vector is assumed to be already in the correct place in the receive buffer.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"count_send",
                    "Description":"The number of elements in the send buffer.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the gathered data for the root process. For other processes, the receiving parameters like this one are ignored.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"counts_recv",
                    "Description":"An array containing the number of elements in the message to receive from each process, not the total number of elements to receive from all processes altogether. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message received by each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element. For non-root processes, the receiving parameters like this one are ignored.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will collect the data gathered.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the gather takes place.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the non-blocking variable gathering.",
                    "Type":"INTEGER",
                    "Optional":false
                }
            ]
        }
    ]
}