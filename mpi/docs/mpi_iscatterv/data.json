{
    "Type":"Documentation",
    "Technology":"MPI",
    "Name":"MPI_Iscatterv",
    "DirectoryName":"mpi_iscatterv",
    "SharedDescription":true,

    "Description":"MPI_Iscatterv is the non-blocking version of MPI_Scatterv; it dispatches data from a root process across all processes in the same communicator and the data dispatched from the root process can vary in the number of elements, and the location from which load these elements from the root process buffer. Unlike MPI_Scatterv however, MPI_Iscatterv returns immediately, before the buffer is guaranteed to have been dispatched. The user must therefore explicitly wait (MPI_Wait) or test (MPI_Test) for the completion of MPI_Iscatterv before safely reusing the buffer passed. Also, MPI_Iscatterv is a collective operation; all processes in the communicator must invoke this routine. Other variants of MPI_Iscatterv are MPI_Scatter, MPI_Scatterv and MPI_Iscatter. Refer to MPI_Scatterv to see the blocking counterpart of MPI_Iscatterv.",
    "Categories":[
        "Collectives",
        "Non-blocking"
    ],

    "Languages": [
        {
            "Language":"C",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to disptach from the root process. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"const void*",
                    "Optional":false
                },
                {
                    "Name":"counts_send",
                    "Description":"An array that contains the number of elements to send to each process, not the total number of elements in the send buffer. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"const int\t[]",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message sent to each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the sending parameters like this one are ignored.",
                    "Type":"const int\t[]",
                    "Optional":false
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the data dispatched.",
                    "Type":"void*",
                    "Optional":false
                },
                {
                    "Name":"count_recv",
                    "Description":"The number of elements in the receive buffer.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element.",
                    "Type":"MPI_Datatype",
                    "Optional":false
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will dispatch the data to scatter.",
                    "Type":"int",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the scatter takes place.",
                    "Type":"MPI_Comm",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"MPI_Request*",
                    "Optional":false
                }
            ],
            "Return":
                {
                    "Type":"int",
                    "Description":"The error code returned from the non-blocking variable scatter.\n- MPI_SUCCESS: the routine successfully completed."
                }
        },
        {
            "Language":"FORTRAN-2008",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to disptach from the root process. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"counts_send",
                    "Description":"An array that contains the number of elements to send to each process, not the total number of elements in the send buffer. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"INTEGER, ASYNCHRONOUS\t(*)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message sent to each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the sending parameters like this one are ignored.",
                    "Type":"INTEGER, ASYNCHRONOUS\t(*)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the data dispatched.",
                    "Type":"TYPE(*), DIMENSION(..), ASYNCHRONOUS",
                    "Optional":false,
                    "Intent":"INOUT"
                },
                {
                    "Name":"count_recv",
                    "Description":"The number of elements in the receive buffer.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element.",
                    "Type":"TYPE(MPI_Datatype)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will dispatch the data to scatter.",
                    "Type":"INTEGER",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the scatter takes place.",
                    "Type":"TYPE(MPI_Comm)",
                    "Optional":false,
                    "Intent":"IN"
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"TYPE(MPI_Request)",
                    "Optional":false,
                    "Intent":"OUT"
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the non-blocking variable scatter.",
                    "Type":"INTEGER",
                    "Optional":true,
                    "Intent":"OUT"
                }
            ]
        },
        {
            "Language":"FORTRAN-90",
            "Parameters": [
                {
                    "Name":"buffer_send",
                    "Description":"The buffer containing the data to disptach from the root process. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"counts_send",
                    "Description":"An array that contains the number of elements to send to each process, not the total number of elements in the send buffer. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"displacements",
                    "Description":"An array containing the displacement to apply to the message sent to each process. Displacements are expressed in number of elements, not bytes. For non-root processes, the sending parameters like this one are ignored.",
                    "Type":"INTEGER\t(*)",
                    "Optional":false
                },
                {
                    "Name":"datatype_send",
                    "Description":"The type of one send buffer element. For non-root processes, the send parameters like this one are ignored.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"buffer_recv",
                    "Description":"The buffer in which store the data dispatched.",
                    "Type":"<type>\t(*)",
                    "Optional":false
                },
                {
                    "Name":"count_recv",
                    "Description":"The number of elements in the receive buffer.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"datatype_recv",
                    "Description":"The type of one receive buffer element.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"root",
                    "Description":"The rank of the root process, which will dispatch the data to scatter.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"communicator",
                    "Description":"The communicator in which the scatter takes place.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"request",
                    "Description":"The variable in which store the handler on the non-blocking operation.",
                    "Type":"INTEGER",
                    "Optional":false
                },
                {
                    "Name":"ierror",
                    "Description":"The error code returned from the non-blocking variable scatter.",
                    "Type":"INTEGER",
                    "Optional":false
                }
            ]
        }
    ]
}